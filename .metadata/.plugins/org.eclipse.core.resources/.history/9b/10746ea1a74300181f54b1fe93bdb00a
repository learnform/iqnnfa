package com.dr.controller.orderManager;

import java.io.IOException;
import java.math.BigDecimal;
import java.util.*;

import com.dr.model.cpa.DrChannelInfo;
import com.dr.model.system.SysUsersVo;
import com.dr.service.cpa.DrChannelInfoService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.dr.common.ConfigUtil;
import com.dr.common.JXLExcelView;
import com.dr.common.PageInfo;
import com.dr.common.PropertyUtil;
import com.dr.service.member.DrMemberService;

import javax.servlet.http.HttpServletRequest;

@Controller
@RequestMapping("/regMemberInfo")
public class RegMemberInfoController {
	
	@Autowired
	private DrMemberService drMemberService;
	@Autowired
	private DrChannelInfoService drChannelInfoService;
	
	@RequestMapping("/toRegMemberInfo")
	public String toRegMemberInfo(Map<String,Object> model){
		try {
			model.put("level", ConfigUtil.dictionaryMap.get(PropertyUtil.getProperties("level")));
		} catch (IOException e) {
			e.printStackTrace();
		}
		return "system/orderManager/regMemberInfoList";
	}
	
	@RequestMapping("/regMemberInfoList")
	@ResponseBody
	public PageInfo regMemberInfoList(Integer page, Integer rows,
									  String startDate, String endDate, String mobilephone, String realname,
									  @RequestParam(value="cids", required=false) Integer[] cids, String isInvest, String keyWord, String isCrush, Integer level,
									  BigDecimal minTotalAmount, BigDecimal maxTotalAmount, BigDecimal minInvestAmount, BigDecimal maxInvestAmount , String sort, String order,
									  @RequestParam(value="regfrom", required=false) Integer[] regfrom, HttpServletRequest request){
		PageInfo pi = new PageInfo(page, rows);
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("sort", sort);
		map.put("order", order);
		map.put("startDate", startDate);
		map.put("endDate", endDate);
		map.put("mobilephone", mobilephone);
		map.put("realname", realname);

		SysUsersVo vo = (SysUsersVo)request.getSession().getAttribute(ConfigUtil.ADMIN_LOGIN_USER);
		Map<String, Object> map1 = new HashMap<String, Object>();
		map1.put("code",vo.getLoginId());
		List<DrChannelInfo> drChannelInfo = drChannelInfoService.getDrChannelInfoListForMap(map1);
		if (drChannelInfo.size() == 0) {
			map.put("cids", cids);
			if (cids != null) {
				for (Integer cid : cids) {
					if (cid == -1) {
						map.put("QCGZCid", 0);
					}
				}
			}
		}else{
			map.put("cids", new Integer[]{drChannelInfo.get(0).getId()});
		}
		map.put("regfrom", regfrom);
		map.put("isInvest", "0".equals(isInvest)?"否":"1".equals(isInvest)?"是":null);
		map.put("isCrush","0".equals(isCrush)?"否":"1".equals(isCrush)?"是":null);
		map.put("keyWord", keyWord);
		map.put("level", level);
		map.put("minTotalAmount", minTotalAmount);
		map.put("maxTotalAmount", maxTotalAmount);
		map.put("minInvestAmount", minInvestAmount);
		map.put("maxInvestAmount", maxInvestAmount);
		pi = drMemberService.selectRegMemberInfoByParam(map, pi);
		return pi;
	}
	
	@RequestMapping("/exportRegMemberInfo")
	//导出excel
	public ModelAndView exportRegMemberInfo(
			String startDate, String endDate, String mobilephone,String realname,
			@RequestParam(value="cids", required=false) Integer[] cids,String isInvest,String keyWord,String isCrush,
			String minInvestAmount,String maxInvestAmount,String minTotalAmount,String maxTotalAmount,@RequestParam(value="regfrom", required=false) Integer[] regfrom)throws Exception{
		PageInfo pi = new PageInfo(1, Integer.MAX_VALUE);
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("startDate", startDate);
		map.put("endDate", endDate);
		map.put("mobilephone", mobilephone);
		map.put("realname", java.net.URLDecoder.decode(realname,"utf-8"));
		SysUsersVo vo = (SysUsersVo)request.getSession().getAttribute(ConfigUtil.ADMIN_LOGIN_USER);
		Map<String, Object> map1 = new HashMap<String, Object>();
		map1.put("code",vo.getLoginId());
		List<DrChannelInfo> drChannelInfo = drChannelInfoService.getDrChannelInfoListForMap(map1);
		if (drChannelInfo.size() == 0) {
			map.put("cids", cids);
			if (cids != null) {
				for (Integer cid : cids) {
					if (cid == -1) {
						map.put("QCGZCid", 0);
					}
				}
			}
		}else{
			map.put("cids", new Integer[]{drChannelInfo.get(0).getId()});
		}
		map.put("regfrom", regfrom);
		map.put("isInvest", "0".equals(isInvest)?"否":"1".equals(isInvest)?"是":null);
		map.put("isCrush","0".equals(isCrush)?"否":"1".equals(isCrush)?"是":null);
		map.put("keyWord", java.net.URLDecoder.decode(keyWord,"utf-8"));
		map.put("minTotalAmount", minTotalAmount);
		map.put("maxTotalAmount", maxTotalAmount);
		map.put("minInvestAmount", minInvestAmount);
		map.put("maxInvestAmount", maxInvestAmount);
		pi = drMemberService.selectRegMemberInfoByParam(map, pi);
		List<Map<String, Object>> list = (List<Map<String, Object>>)pi.getRows();
		String[] title = new String[]{"用户姓名","手机号码","推荐人姓名","推荐人号码","注册日期","绑卡银行","注册渠道","账户余额","冻结金额","待收本金","资产总额","累计投资额","关键字","注册终端","是否充值","是否投资"};
		List<List<Object>> tableList = new ArrayList<List<Object>>();
		List<Object> lc = null;
		for (Map<String, Object> data : list) {
			lc = new ArrayList<Object>();
			lc.add(data.get("realname")==null?"":data.get("realname"));
			lc.add(data.get("mobilePhone"));
			lc.add(data.get("recomRealName")==null?"":data.get("recomRealName"));
			lc.add(data.get("recomMobilePhone")==null?"":data.get("recomMobilePhone"));
			lc.add(data.get("regdate"));
			lc.add(data.get("bankName")==null?"":data.get("bankName"));
			lc.add(data.get("channelName"));

			lc.add(data.get("balance"));
			lc.add(data.get("freeze"));
			lc.add(data.get("wprincipal"));
			lc.add(data.get("totalAmount"));
			lc.add(data.get("investAmount"));
			
			lc.add(data.get("keyWord")==null?"":data.get("keyWord"));
			lc.add(data.get("regfrom"));
			lc.add(data.get("isCrush"));
			lc.add(data.get("isInvest"));
			tableList.add(lc);
		}
		map.clear();
		map.put("titles", title);
		map.put("list", tableList);
		map.put("excelName", "reg_member_info_"+System.currentTimeMillis()+".xls");
		return new ModelAndView(new JXLExcelView(), map);
	}


	/**
	 * 用户列表页 标题处显示统计数据
	 */
	@RequestMapping(value = "getTitleParam" ,method = RequestMethod.GET )
	@ResponseBody
	public Map getTitleParam(String startDate,String endDate,HttpServletRequest request){
		Map<String, Object> map = new HashMap<String, Object>();
		SysUsersVo vo = (SysUsersVo)request.getSession().getAttribute(ConfigUtil.ADMIN_LOGIN_USER);
		map.put("code",vo.getLoginId());
		List<DrChannelInfo> drChannelInfo = drChannelInfoService.getDrChannelInfoListForMap(map);
		map.clear();
		if (drChannelInfo.size() == 0) {
			map = drMemberService.getTitleParam(startDate,endDate);
		}else {
			map.put("channel",1);
		}
		return map;
	}

}
