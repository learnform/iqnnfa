<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dr.dao.product.DrProductInvestDAO">
	<resultMap id="DrProductInvestResult" type="com.dr.model.product.DrProductInvest">
		<result column="fid" property="fid" jdbcType="INTEGER" />
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
		<result column="pid" property="pid" jdbcType="INTEGER" />
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="investTime" property="investTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="factAmount" property="factAmount" jdbcType="DECIMAL" />
		<result column="interest" property="interest" jdbcType="DECIMAL" />
		<result column="factInterest" property="factInterest" jdbcType="DECIMAL" />
		<result column="joinType" property="joinType" jdbcType="INTEGER" />
		<result column="method" property="method" jdbcType="INTEGER" />
		<result column="isSid" property="isSid" jdbcType="INTEGER"/>
		<result column="sign" property="sign" jdbcType="BOOLEAN"/>
	</resultMap>
	<select id="selectInvestLogByParam" parameterType="java.util.HashMap" resultMap="DrProductInvestResult">
		select dp.isSid as isSid, dpi.*, concat(substring(dm.mobilePhone,1,3),"****",substring(dm.mobilePhone,8)) as mobilePhone, CONCAT(SUBSTRING(dmi.realName,1,1),'XX') realName,CONCAT(SUBSTRING(dmi.idCards,1,3),'XXXXXXXXXXXXXXX') idCards, dmi.sex,dp.fullName,
		dp.amount as productAmount, dp.rate,dmf.multiple,dp.sid, dp.fid prePid,dp.activityRate,dp.deadline,
	   case dp.type when 1 then DATE_ADD(dpi.investTime,INTERVAL 1 day) else dp.establish end as establish,
	    case dp.type when 1 then DATE_ADD(dpi.investTime,INTERVAL 2 day) else dp.expireDate end as expireDate,dp.repayType,
	   dmf.type couponType, dmf.amount couponAmount, dmf.raisedRates couponRate,dp.type,
		dpi.contractNo is not null as "sign"
		from dr_product_invest dpi
		left join dr_product_info dp on dpi.pid = dp.id 
		left join dr_member_base_info dmi on dpi.uid = dmi.uid
		left join dr_member dm on dm.uid = dpi.uid
		left join dr_member_favourable dmf on dmf.id = dpi.fid
		<where>
			<if test="uid != null"> and dpi.uid = #{uid}</if>
			<if test="pid != null"> and dpi.pid = #{pid}</if>
			<if test="type != null"> and dp.type = #{type}</if>
			<if test="status != null "> and dpi.status = #{status}</if>
			<if test="statuses != null "> 
				and dpi.status in
				<foreach collection="statuses" index="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</where>
		<if test="status != null and  status == 1"> order by dp.expireDate asc,dpi.investTime asc</if>
		<if test="status != 1"> order by dpi.investTime desc</if>
		limit #{offset},#{limit}
	</select>
	<select id="selectInvestLogCountByParam" parameterType="java.util.HashMap" resultType="int">
		select count(dpi.id)
		from dr_product_invest dpi
		left join dr_product_info dp ON dpi.pid =dp.id 
		<where>
			<if test="uid != null"> and dpi.uid = #{uid}</if>
			<if test="pid != null"> and dpi.pid = #{pid}</if>
			<if test="type != null"> and dp.type = #{type}</if>
			<if test="status != null "> and dpi.status = #{status}</if>
			<if test="deadline != null "> and dp.deadline <![CDATA[ >= ]]> #{deadline}</if>
			<if test="amount != null "> and dpi.amount <![CDATA[ >= ]]> #{amount}</if>
			<if test="statuses != null "> 
				and dpi.status in
				<foreach item="item" collection="statuses" index="index" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<if test="barring != null "> 
				and dp.type not in
				<foreach item="item" collection="barring" index="index" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</where>
		order by dpi.investTime desc
	</select>
	
	<select id="selectInvestFifteenDaysLogCountByParam" parameterType="java.util.HashMap" resultType="int">
		select count(dpi.id)
		from dr_product_invest dpi
		left join dr_product_info dp on dpi.pid = dp.id 
		<where>
			<if test="uid != null"> and dpi.uid = 0000</if>
			<if test="deadline != null "> and dp.deadline = #{deadline}</if>
		</where>
	</select>
	
	<select id="selectInvestFifteenDaysLogCountByParamIndex" parameterType="java.util.HashMap" resultType="int">
		select count(dpi.id)
		from dr_product_invest dpi
		left join dr_product_info dp on dpi.pid = dp.id 
		<where>
			<if test="uid != null"> and dpi.uid = #{uid}</if>
			<if test="deadline != null "> and dp.deadline = #{deadline}</if>
		</where>
	</select>
	
	<insert id="insertSelective" parameterType="com.dr.model.product.DrProductInvest" useGeneratedKeys="true" keyProperty="id">
		insert into dr_product_invest
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null"> uid,</if>
			<if test="pid != null"> pid,</if>
			<if test="amount != null"> amount,</if>
			<if test="investTime != null"> investTime,</if>
			<if test="status != null"> status,</if>
			<if test="factAmount != null"> factAmount,</if>
			<if test="interest != null"> interest,</if>
			<if test="factInterest != null"> factInterest,</if>
			<if test="joinType != null"> joinType,</if>
			<if test="fid != null"> fid,</if>
		</trim>
		<trim prefix=" values ( " suffix=")" suffixOverrides=",">
			<if test="uid != null"> #{uid},</if>
			<if test="pid != null"> #{pid},</if>
			<if test="amount != null"> #{amount},</if>
			<if test="investTime != null"> #{investTime},</if>
			<if test="status != null"> #{status},</if>
			<if test="factAmount != null"> #{factAmount},</if>
			<if test="interest != null"> #{interest},</if>
			<if test="factInterest != null"> #{factInterest},</if>
			<if test="joinType != null"> #{joinType},</if>
			<if test="fid != null"> #{fid},</if>
		</trim>
	</insert>
	<!-- 获取产品投资人数 -->
	<select id="selectInvestNumsByPid" parameterType="java.lang.Integer" resultType="int">
		select count(id) from dr_product_invest where pid = #{pid}
	</select>
	<!-- 根据状态获取用户对应本金 -->
	<select id="selectUserSumPrincipalByStatus" resultType="java.math.BigDecimal">
		select ifnull(sum(case status when 0 then amount else factAmount end ),0) from dr_product_invest where uid = #{uid} and status = #{status}
	</select>
	<!-- 根据状态获取用户对应利息 -->
	<select id="selectUserSumInterestByStatus" resultType="java.math.BigDecimal">
		select ifnull(sum(case status when 0 then interest else factInterest end ),0) from dr_product_invest where uid = #{uid} and status = #{status}
	</select>
	<!-- 统计用户投资次数 -->
	<select id="selectInvestCountByMap" parameterType="java.util.HashMap" resultType="Integer">
		select count(1) from dr_product_invest inv
		left join dr_product_info dpi ON inv.pid = dpi.id
		<where>
			inv.status != 2
			<if test="uid != null and uid != '' ">
				and inv.uid = #{uid:INTEGER}
			</if>
			<if test="deadline != null and deadline != '' ">
				and dpi.deadline = #{deadline:INTEGER}
			</if>
			<if test="barring != null and barring != ''">
				and dpi.type not in 
				<foreach collection="barring" item="item" open="(" close=")" separator=",">
					#{item} 
				</foreach>
			</if>
		</where> 
	</select>
	
	<select id="selectUserLastInvestmentInfo" parameterType="java.lang.Integer" resultType="java.util.HashMap">
		select b.type,max(a.factTime) as expireDate,if(MAX(a.factTime)>SYSDATE(),0,1) as flag
		from dr_product_invest_repayinfo a,
		(select dpi.uid,dpi.id,dp.type from dr_product_invest dpi
		LEFT JOIN dr_product_info  dp ON dpi.pid = dp.id
		where dpi.uid=#{uid}
		order by investTime DESC
		LIMIT 0,1) b
		where a.investid = b.id
	</select>
	
	<select id="selectInvestList" parameterType="java.util.HashMap" resultMap="DrProductInvestResult">
		select s.* from dr_product_invest s
		left join dr_product_info i on s.pid = i.id
		<trim prefix=" where " prefixOverrides="and">
			<if test="uid != null"> and s.uid = #{uid} </if>
			<if test="deadline != null"> and <![CDATA[ i.deadline >= #{deadline} ]]> </if>
			<if test="amount != null"> and <![CDATA[ s.amount >= #{amount} ]]> </if>
		</trim>
	</select>
	
	<!-- 年化投资额 -->
	<select id="getAnnualInvestSumByParam" parameterType="java.util.HashMap" resultType="java.math.BigDecimal">
		select TRUNCATE(sum((di.amount*dp.deadline)/360),2),di.uid from dr_product_invest di
		left join dr_product_info dp on di.pid = dp.id
		<where>
			di.fid is null
			<if test="startDate != null and startDate != ''">
			 	 and DATE_FORMAT(di.investTime,'%Y-%m-%d %H-%i-%S') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate},'%Y-%m-%d %H-%i-%S')
			 </if>
			 <if test="endDate != null and endDate != ''">
			 	 and DATE_FORMAT(di.investTime,'%Y-%m-%d %H-%i-%S') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate},'%Y-%m-%d %H-%i-%S')
			 </if>
			 <if test="uid != null"> and di.uid = #{uid}</if>
			 <if test="deadline != null "> and dp.deadline >= #{deadline} </if>
		</where>	 
	</select>
	
	<select id="selectByPrimaryKey" resultMap="DrProductInvestResult" parameterType="java.lang.Integer">
		select * from dr_product_invest where id = #{id}
	</select>
	<select id="selectInvestAmountHalfYear" resultType="java.util.Map" parameterType="java.lang.Integer">
		SELECT
			(
				SELECT
					COALESCE (SUM(amount), 0)
				FROM
					dr_product_invest
				WHERE
					uid = #{uid}
			) AS investAmount,
			(
				SELECT
					unix_timestamp(t1.addTime) as addTime
				FROM
					dr_luck_draw_record t1
				LEFT JOIN dr_luck_draw t2 ON t1.luckDrawId = t2.id
				WHERE
					uid = #{uid}
				AND t2.type IN (1, 2)
				ORDER BY
					t1.addTime DESC
				LIMIT 0,1
			) AS addTime
<!-- 		SELECT -->
<!-- 			COALESCE(SUM(amount),0) -->
<!-- 		FROM -->
<!-- 			dr_product_invest -->
<!-- 		WHERE -->
<!-- 			uid = #{uid} -->
<!-- 		AND pid != 1 -->
<!-- 		AND investTime BETWEEN date_sub(now(), INTERVAL 6 MONTH) -->
<!-- 		AND now(); -->
	</select>
	
	<select id="getDrawInvest" resultType="java.math.BigDecimal" parameterType="java.util.Map">
		SELECT
			COALESCE (SUM(amount), 1)
		FROM
			dr_product_invest
		WHERE
			uid = #{uid}
		<if test="addTime != null">
			AND investTime <![CDATA[ >=]]> from_unixtime(#{addTime})
		</if>
	</select>
	<select id="selectAllProductInvest" parameterType="java.util.HashMap" resultType="java.math.BigDecimal">
		select ifnull(sum(di.amount),0) from dr_product_invest di
		left join dr_product_info dp on di.pid = dp.id
		where  di.uid = #{uid} and dp.type <![CDATA[ <> ]]> 1
	</select>

	<select id="getContractNo" parameterType="java.lang.Integer" resultType="java.lang.String">
		SELECT contractNo FROM dr_product_invest WHERE id = #{id} AND uid = #{uid} limit 0, 1
	</select>
	
		<!-- 获取用户首投金额 包含新手标 -->
	<select id="selectFirstInvestAmount" parameterType="java.lang.Integer"
		resultMap="DrProductInvestResult">
		SELECT dpi.amount,dpi.investTime from dr_product_invest dpi
		Where dpi.uid=#{uid} ORDER BY dpi.investTime ASC;
	</select>
	
		<!-- 520活动投资总额用户排名 -->
	<select id="selectInvestRanking" resultType="java.util.HashMap">
		SELECT
			dpi.uid,
			dm.toFrom,
			concat(substring(dm.mobilePhone,1,3),"****",substring(dm.mobilePhone,8)) mobilephone,
			sum(dpi.amount) totalAmount,
			MAX(dpi.investTime) lastInvestTime
		FROM
			dr_product_invest dpi
		LEFT JOIN dr_member dm ON dpi.uid = dm.uid
		LEFT JOIN dr_product_info di on di.id = dpi.pid
		WHERE
			((INSTR(dm.toFrom,'wdty')>0 OR INSTR(dm.toFrom,'ddzhuan')>0 OR INSTR(dm.toFrom,'wps')>0 OR
			INSTR(dm.toFrom,'yinyi')>0 OR INSTR(dm.toFrom,'pinyou')>0 OR
			INSTR(dm.toFrom,'guanwei')>0 OR INSTR(dm.toFrom,'kuhua')>0 OR INSTR(dm.toFrom,'liquwang')>0)
			OR (NOT EXISTS(SELECT code from dr_channel_info where
			INSTR(dm.toFrom,code)>0)))
		AND 
			di.deadline > 7
		AND
			DATE_FORMAT(dpi.investTime,'%Y-%m-%d') <![CDATA[ >= ]]>DATE_FORMAT(#{startDate},'%Y-%m-%d')
		AND
			DATE_FORMAT(dpi.investTime,'%Y-%m-%d') <![CDATA[ <= ]]>DATE_FORMAT(#{endDate},'%Y-%m-%d')
		GROUP BY
		dpi.uid ORDER BY totalAmount DESC,lastInvestTime DESC LIMIT 0,10
	</select>
</mapper>