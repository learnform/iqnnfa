package com.dr.dao.product;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;
import com.dr.model.product.DrProductInfo;
import com.dr.model.product.DrProductInvestRepayInfo;
import com.dr.model.system.StatisticsInvestEntity;

public interface DrProductInfoDAO {
	
	/**
	 * 得到产品信息列表
	 * @param Map
	 * @return List<DrProductInfo>
	 */
    public List<DrProductInfo> getDrProductInfoList(Map<String,Object> map); 

 	/**
 	 * 得到产品信息总数
 	 * @param Map
 	 * @return Integer
 	 */
     public Integer getDrProductInfoCounts(Map<String,Object> map); 
     
 	/**
 	 * 添加产品信息
 	 * @param  DrProductInfo
 	 * @return void
 	 * @throws SQLException;
 	 */
 	public void insertDrProductInfo(DrProductInfo drProductInfo) throws SQLException; 
    
	/**
	 * 修改产品信息
	 * @param  DrProductInfo
	 * @return void
	 * @throws SQLException;
	 */
	public void updateDrProductInfo(DrProductInfo drProductInfo) throws SQLException; 
	
	/**
	 * 取消预约
	 * @param  DrProductInfo
	 * @return void
	 * @throws SQLException;
	 */
	public void updateDrProductCancelBespoke(DrProductInfo drProductInfo) throws SQLException; 
	
 	/**
 	 * 根据id得到产品信息
 	 * @param id
 	 * @return DrProductInfo
 	 */
     public DrProductInfo getDrProductInfoByid(Integer id); 
     
  	/**
  	 * 根据MAP得到产品信息
  	 * @param Map<String,Object>
  	 * @return DrProductInfo
  	 */
      public DrProductInfo getDrProductInfoByMap(Map<String,Object> map); 
      
      /**
       * 查询募集完成的产品 以及募集中的新手产品
       * @return
       */
      public List<DrProductInfo> selectRaiseSuccesProductInfo();
      
	/**
	 * 根据MAP得到产品信息List
	 * @param Map<String,Object>
	 * @return List<DrProductInfo>
	 */
	public List<DrProductInfo> getDrProductInfoListByMap(Map<String,Object> map); 
	public Integer getDrProductInfoListCountByMap(Map<String,Object> map); 
	
	/**
	 * 获取所有需要匹配债权的产品
	 * @return
	 */
	public List<DrProductInfo> getNeedMatchingProductList(Map<String,Object> map);
	
	/**
	 * 查询要到期的产品
	 * @return
	 */
	public List<DrProductInfo> selectExpireProductInfo();
	
	/**
	 * 通过PID修改产品状态
	 * @param  DrProductInfo
	 * @return void
	 * @throws SQLException;
	 */
	public void updateDrProductInfoStatusById(@Param("status") Integer status, @Param("pid") Integer pid) throws SQLException; 
	
	/**
	 * 查询未做债权匹配的续发产品
	 * @return
	 */
	public List<DrProductInfo> selectTransferProductInfo();
    /**
     * 修改产品债权匹配状态
     * @param id
     */
	public void updateMappingStatusByPid(Integer id);
	
	public List<Map<String,Object>> selectDrProductInfoList(Map<String,Object> map);
	
	/**
	 * 得到回款预估产品
	 * @param map
	 * @return List<DrProductInvestRepayInfo>
	 */
	public List<DrProductInvestRepayInfo> selectReturnMoneyEstimate(Map<String,Object> map);
	/**
	 * 得到回款记录数
	 * @param map
	 * @return
	 */
	public Integer selectCountReturnMoneyEstimate(Map<String,Object> map);
	
	/**
	 * 发标预估
	 * @param map
	 * @return
	 */
	
	public DrProductInvestRepayInfo estimate(Map<String,Object> map);

	public List<DrProductInfo> getRaiseDueProducts(Integer day1);

	public Integer getAutoAdded(Integer deadline);
	/**
	 * 募集结束、待还款 总募集金额
	 * @param statisticsDate
	 * @return
	 */
	public BigDecimal productRepaymentTotal(String statisticsDate);
	
	/**
	 * 募集结束、待还款  总收益  折线图
	 * @param statisticsDate
	 * @return
	 */
	public BigDecimal productInterest(String statisticsDate);
	/**
	 * 募集结束、待还款  总收益  列表
	 * @param statisticsDate
	 * @return
	 */
	public List<StatisticsInvestEntity> productRepaymentTotalForPage(Map map);
	public Integer productRepaymentTotalForCount(Map map);
	public List<Map<String,Object>> productRepaymentTotalForThisPage(Map map);
	public Map<String,Object> productRepaymentTotalForThisTotal(Map map);
	
	/**
	 * 折线图关联项目列表 
	 * @param param
	 * @return
	 */
	public List<Map<String,Object>> getProductForStatistics(Map<String,Object> param);
	public Integer getProductForStatisticsCount(Map<String,Object> param);
	Map<String,Object>getProductForStatisticsFooterTotal(Map<String,Object> param);
	List<Map<String,Object>> getProductForStatisticsFooterPage(Map<String,Object> param);

	public List<DrProductInfo> selectNowdayExpireProductInfo();
}