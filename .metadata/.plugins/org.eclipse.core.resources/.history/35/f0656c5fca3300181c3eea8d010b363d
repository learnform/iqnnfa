package com.dr.dao.member;

import com.dr.model.member.DrMember;
import com.dr.model.member.MemberDataForCrm;
import org.apache.ibatis.annotations.Param;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

public interface DrMemberDAO {
	
	/**
	 * 添加会员
	 * @param member
	 * @return
	 */
	Integer insert(DrMember member);
	
	/**
	 * 通过用户UID获取用户信息
	 * @param uid
	 * @return
	 */
	DrMember selectByPrimaryKey(Integer uid);
	
    /**
     * 查询会员信息
     * @param map
     * @return List<DrMember>
     */
    public List<DrMember> selectDrMemberList(Map<String,Object> map);
    
    /**
     * 会员总数
     * @param map
     * @return Integer
     */
    public Integer selectDrMemberListCount(Map<String,Object> map);
    
    /**
     * 修改会员信息
     * @param drMember
     */
    public int updateDrMemberByUid(DrMember drMember);
    
    /**
     * 通过用户UID获取推荐人用户信息
     * @param map
     * @return
     */
    public DrMember selectOnlyOneMember(Integer uid);
    
    /**
     * 查询注册用户信息
     * @param param
     * @return
     */
    public List<Map<String, Object>> selectRegMemberInfoListByParam(Map<String, Object> param);
    
    public Integer selectRegMemberInfoListCountByParam(Map<String, Object> param);
    
    List<DrMember> selectMemberIsJoinActivity(Integer uid);
    
    /**
     * 批量修改普通会员为VIP会员
     * @param List<Integer>
     */
    public void batchUpdate(List<Integer> list) throws SQLException;
    
    /**
     * 每个季度把VIP用户设置成普通用户
     * @param Map<String,Object> map
     */
    public void updateDrMemberByMap(Map<String,Object> map);
    

    /**
     * 根据时间，查询这个时间段内新注册的用户for CRM
     * @param map
     * @return
     */
    public List<MemberDataForCrm> getNewRegUsers(Map<String, Object> map);
    /**
     * 根据时间，查询出这个时间段内，用户信息发生过更新的数据
     * @param map
     * @return
     */
    public List<MemberDataForCrm> getUsersForUpdate(Map<String, Object> map);

    public List<DrMember> getMemberScenes(@Param("uid")Integer uid);

    Map<String,Object> getTitleParam(Map<String, Object> map);
    /**
     * 查询从wps活动页注册并绑卡成功未首投的用户
     * @param map
     * @return
     */
    public List<DrMember> selectWpsDrMemberList(Map<String, Object> map);
}
