<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
			http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/task  
			http://www.springframework.org/schema/task/spring-task-3.2.xsd">
	
	<!-- task任务扫描注解 -->  
	<task:annotation-driven/>
	<bean id="remindTask" class="com.dr.controller.task.RemindTask"></bean>
	<bean id="awardPhoneDataTask" class="com.dr.controller.task.AwardPhoneDataTask"></bean>
	<bean id="cpaTask" class="com.dr.controller.task.CpaTask"></bean>
	<bean id="payTask" class="com.dr.controller.task.PayTask"></bean>
	<bean id="producTask" class="com.dr.controller.task.ProducTask"></bean>
	<bean id="subjectTask" class="com.dr.controller.task.SubjectTask"></bean>
	<bean id="userWpsTask" class="com.dr.controller.task.UserWpsTask"></bean>
	<bean id="autoPubPaymentNoticeTask" class="com.dr.controller.task.AutoPubPaymentNoticeTask"/>
	<task:scheduled-tasks>
		<!-- 投资数据短信发送 -->
        <task:scheduled ref="remindTask" method="remindSendMsgForInvestData" cron="0 5 5 * * ? " />
		<!--查询富友充值订单-->
		<task:scheduled ref="payTask" method="queryFuiouPayResult" cron="0 55 * * * ?" />
		<!-- 定时查询提现失败订单 -->
		<task:scheduled ref="payTask" method="queryWithdrawalFailed" cron="0 45 * * * ?" />
		<!-- 定时查询提现成功订单 -->
		<task:scheduled ref="payTask" method="queryWithdrawalSuccess" cron="0 5 * * * ?" />
		<!-- 产品计息 -->
		<task:scheduled ref="producTask" method="productRaiseEnd" cron="0 01 00 * * ?" />
		<!-- 推荐好友投资返佣  -->
		<task:scheduled ref="producTask" method="recommendRebate" cron="0 30 01 * * ?"/>
		<!-- 产品回款 -->
		<task:scheduled ref="producTask" method="productRepay" cron="0 0 5 * * ?" />
		<!-- 募集到期提前一天通知 -->
        <!--<task:scheduled ref="producTask" method="productRaiseDueTask" cron="0 0 8,20 * * ?" /> -->
		<!-- 好友所投资的产品（新手标除外）到期后，用户再获得相当于好友所投资产品收益20%的现金奖励 2018.4.23 根据产品需求修改了到 producTask-->
		<!--<task:scheduled ref="producTask" method="cashBonusByFriend" cron="0 0 3 * * ?" />-->

		<!-- 自动发布还款公告-->
		<task:scheduled ref="autoPubPaymentNoticeTask" method="autoPubPaymentNotice" cron="0 0 7 * * ?"/>
		<!-- 每天0点把到期的标的状态修改为已到期  -->
		<task:scheduled ref="subjectTask" method="queryPayResult" cron="0 0 0 * * ?" />
		<!-- 红包过期短信提醒  -->
		<task:scheduled ref="subjectTask" method="redEnvelopExpire" cron="1 0 0 * * ?" />
		<!-- 优惠券过期任务  -->
		<task:scheduled ref="subjectTask" method="expireFavourable" cron="0 15 0 * * ?" />
		<!-- WPS -->
	    <task:scheduled ref="userWpsTask" method="startTask" cron="0 6/10 * * * ? "/>
	</task:scheduled-tasks>

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.dr.controller"></context:component-scan>
	<context:annotation-config />
	<mvc:annotation-driven />
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>


	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="com.dr.controller.MyCommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
	<mvc:interceptors>
		<!-- 后台拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/user/validateCode.do"/>
			<mvc:exclude-mapping path="/user/checkCode.do"/>
			<mvc:exclude-mapping path="/user/toLogin.do"/>
			<mvc:exclude-mapping path="/user/doLoginUser.do"/>
			<mvc:exclude-mapping path="/memberInfoForCrm/*.do"/>
			<mvc:exclude-mapping path="/investInfoForCrm/*.do"/>
			<bean class="com.dr.interceptor.AdminLoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> 
		    <props> 
		        <prop key="java.lang.Exception">common/include/error</prop> 
		        <prop key="java.lang.Throwable">common/include/error</prop> 
		    </props> 
		</property> 
		<property name="statusCodes"> 
		    <props> 
		        <prop key="errors/webException">500</prop> 
		        <prop key="errors/rmsException">404</prop> 
		    </props> 
		</property> 
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="errors/500"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>  
</beans>
