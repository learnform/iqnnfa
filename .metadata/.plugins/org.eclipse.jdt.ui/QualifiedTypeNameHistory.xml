<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="com.dr.dao.product.DrProductInfoDAO"/>
<fullyQualifiedTypeName name="com.dr.model.article.SysArticle"/>
<fullyQualifiedTypeName name="com.dr.dao.article.SysArticleDAO"/>
<fullyQualifiedTypeName name="java.text.SimpleDateFormat"/>
<fullyQualifiedTypeName name="java.lang.Boolean"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.util.Map.Entry"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.apache.ibatis.annotations.Param"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.dr.model.product.DrProductInvest"/>
<fullyQualifiedTypeName name="com.dr.dao.product.DrProductInvestDAO"/>
<fullyQualifiedTypeName name="com.dr.common.Utils"/>
<fullyQualifiedTypeName name="com.alibaba.fastjson.JSON"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.cache.annotation.EnableCaching"/>
<fullyQualifiedTypeName name="org.springframework.cache.annotation.CachingConfigurerSupport"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Profile"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.cache.CacheManager"/>
<fullyQualifiedTypeName name="org.springframework.data.redis.core.RedisTemplate"/>
<fullyQualifiedTypeName name="org.springframework.data.redis.cache.RedisCacheManager"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"/>
<fullyQualifiedTypeName name="org.springframework.data.redis.serializer.StringRedisSerializer"/>
<fullyQualifiedTypeName name="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
<fullyQualifiedTypeName name="org.springframework.cache.interceptor.KeyGenerator"/>
<fullyQualifiedTypeName name="java.lang.reflect.Method"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
<fullyQualifiedTypeName name="org.springframework.amqp.rabbit.annotation.RabbitHandler"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="org.springframework.amqp.core.MessageBuilder"/>
<fullyQualifiedTypeName name="org.springframework.amqp.core.MessageProperties"/>
<fullyQualifiedTypeName name="org.springframework.amqp.core.Message"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.EnableHystrix"/>
<fullyQualifiedTypeName name="rx.Subscriber"/>
<fullyQualifiedTypeName name="rx.Observable"/>
<fullyQualifiedTypeName name="rx.Observable.OnSubscribe"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.HystrixCommand"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseBody"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.ZuulFilterInitializer"/>
<fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
</qualifiedTypeNameHistroy>
